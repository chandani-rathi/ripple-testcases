import { describe, it, expect, beforeEach, afterEach, vi } from 'vitest';
import { mount, flushSync, effect } from 'ripple';
import { App } from "@/App.ripple"

describe('app', () => {
	let container;

	function render(component) {
		mount(component, {
			target: container
		});
	}

	beforeEach(() => {
		container = document.createElement('div');
		document.body.appendChild(container);
	});

	afterEach(() => {
		document.body.removeChild(container);
		container = null;
	});

	it('render', () => {
		render(App);
		expect(container).toMatchSnapshot()
	});

	it('click - button 5 times', () => {
		render(App);
		const buttons = container.querySelectorAll('button');
		const count = container.querySelector("span");

        for(let i=0; i < 5; i++) {
            buttons[0].click();
            flushSync();
        }
		expect(count.textContent).toBe("-5")

	});

	it('click + button 5 times', () => {
		render(App);
		const buttons = container.querySelectorAll('button');
		const count = container.querySelector("span");

        for(let i=0; i < 5; i++) {
            buttons[1].click();
            flushSync();
        }
		expect(count.textContent).toBe("5")

	});

    

	it('click - button 3 times + button 5 times', () => {
		render(App);
		const buttons = container.querySelectorAll('button');
		const count = container.querySelector("span");

        for(let i=0; i < 3; i++) {
            buttons[0].click();
            flushSync();
        }
        for(let i=0; i < 5; i++) {
            buttons[1].click();
            flushSync();
        }
		expect(count.textContent).toBe("2")

	});
});
